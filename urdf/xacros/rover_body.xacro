<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="Archimede">
	<!-- 
		@author: Matteo Caruso
		@email: matteo.caruso@phd.units.it
		@email: matteo.caruso1993@gmail.com
	-->
	<xacro:macro name="rover_base" params="name has_differential">
		<!-- Depending whether the has_differential flag is on, select the correct yaml file -->
		<xacro:if value="${has_differential}">
			<xacro:property name="filename" value="$(find robot4ws_description)/urdf/config/body_only.yaml"/>
			<xacro:property name="filenameTiltPlate" value="$(find robot4ws_description)/urdf/config/tilt_plate.yaml"/>
			<xacro:property name="body_config_tiltPlate" value="${load_yaml (filenameTiltPlate)}"/>
		</xacro:if>
		<xacro:unless value="${has_differential}">
			<xacro:property name="filename" value="$(find robot4ws_description)/urdf/config/body.yaml"/>
		</xacro:unless>
		<xacro:property name="body_config" value="${load_yaml (filename)}"/>

		<!-- Define world link-->
		<link name="${name}_base_link"/>

		<!-- Define foot print-->
		<!-- <link name="${name}_foot_print"/>
		<joint name="${name}_foot_print_joint" type="fixed">
			<parent link="${name}_base_link_dummy"/>
			<child link="${name}_foot_print"/>
			<origin xyz="0 0 -0.16" rpy="0 0 0"/>
		</joint> -->
		<!-- <gazebo reference="${name}_foot_print_joint">
			<disableFixedJointLumping>true</disableFixedJointLumping> 
			<preserveFixedJoint>true</preserveFixedJoint>
		</gazebo> -->

		<!-- Define rover base link-->
		<link name="${name}_base_link_dummy">
			<inertial>
				<xacro:property name="data" value="${body_config['body']['inertial']}"/>
				<mass value="${data['mass']}"/>
				<origin xyz="${data['origin']['position']['x']} ${data['origin']['position']['y']} ${data['origin']['position']['z']}"
				 rpy="${data['origin']['orientation']['roll']} ${data['origin']['orientation']['pitch']} ${data['origin']['orientation']['yaw']}"/>
				<inertia ixx="1.71402" ixy="0.0" ixz="0.0" iyy="0.8856" iyz="0.0" izz="2.5725"/>
			</inertial>
			<visual name="${name}_body_visual">
				<xacro:property name="data" value="${body_config['body']['visual']}"/>
				<xacro:if value="${data['mesh']}">
					<!-- Use mesh for visualization -->
					<xacro:property name="data_tmp" value="${data['origin_mesh']}"/>
					<origin xyz="${data_tmp['position']['x']} ${data_tmp['position']['y']} ${data_tmp['position']['z']}"
					rpy="${data_tmp['orientation']['roll']} ${data_tmp['orientation']['pitch']} ${data_tmp['orientation']['yaw']}"/>
					<geometry>
						<mesh filename="package://robot4ws_description/meshes/${data['filename']}" scale="${data['mesh_scale']['x']} ${data['mesh_scale']['y']} ${data['mesh_scale']['z']}"/>
					</geometry>
					<material name="black"/>
				</xacro:if>

				<xacro:unless value="${data['mesh']}">
					<!-- Use box as simple geometry visualization -->
					<xacro:property name="data_tmp" value="${data['origin_simple_geom']}"/>
					<origin xyz="${data_tmp['position']['x']} ${data_tmp['position']['y']} ${data_tmp['position']['z']}"
					rpy="${data_tmp['orientation']['roll']} ${data_tmp['orientation']['pitch']} ${data_tmp['orientation']['yaw']}"/>
					<geometry>
						<box size="${body_config['body']['geometry']['body_length']} ${body_config['body']['geometry']['body_width']} ${body_config['body']['geometry']['body_heigth']}"/>
					</geometry>
				</xacro:unless>
			</visual>
		</link>
		


		<!-- Tilt plate (only with differential) -->
		<xacro:if value="${has_differential}">
			<link name="${name}_tilt_plate">
				<inertial>
					<xacro:property name="data" value="${body_config_tiltPlate['body']['inertial']}"/>
					<mass value="${data['mass']}"/>
					<origin xyz="${data['origin']['position']['x']} ${data['origin']['position']['y']} ${data['origin']['position']['z']}"
					rpy="${data['origin']['orientation']['roll']} ${data['origin']['orientation']['pitch']} ${data['origin']['orientation']['yaw']}"/>
					<inertia ixx="${data['inertia']['ixx']}" ixy="${data['inertia']['ixy']}" ixz="${data['inertia']['ixz']}"
				 	iyy="${data['inertia']['iyy']}" iyz="${data['inertia']['iyz']}" izz="${data['inertia']['izz']}"/>
				</inertial>
				<visual name="${name}_tilt_plate_visual">
					<xacro:property name="data" value="${body_config_tiltPlate['body']['visual']}"/>
					<xacro:if value="${data['mesh']}">
						<!-- Use mesh for visualization -->
						<xacro:property name="data_tmp" value="${data['origin_mesh']}"/>
						<origin xyz="${data_tmp['position']['x']} ${data_tmp['position']['y']} ${data_tmp['position']['z']}"
						rpy="${data_tmp['orientation']['roll']} ${data_tmp['orientation']['pitch']} ${data_tmp['orientation']['yaw']}"/>
						<geometry>
							<mesh filename="package://robot4ws_description/meshes/${data['filename']}" scale="${data['mesh_scale']['x']} ${data['mesh_scale']['y']} ${data['mesh_scale']['z']}"/>
						</geometry>
						<material name="black"/>
					</xacro:if>

					<xacro:unless value="${data['mesh']}">
						<!-- Use box as simple geometry visualization -->
						<xacro:property name="data_tmp" value="${data['origin_simple_geom']}"/>
						<origin xyz="${data_tmp['position']['x']} ${data_tmp['position']['y']} ${data_tmp['position']['z']}"
						rpy="${data_tmp['orientation']['roll']} ${data_tmp['orientation']['pitch']} ${data_tmp['orientation']['yaw']}"/>
						<geometry>
							<box size="${body_config_tiltPlate['body']['geometry']['body_length']} ${body_config_tiltPlate['body']['geometry']['body_width']} ${body_config_tiltPlate['body']['geometry']['body_heigth']}"/>
						</geometry>
					</xacro:unless>
				</visual>
			</link>
		</xacro:if>


		<!-- Define here the joint of the tilt plate to the body -->
		
		<xacro:if value="${has_differential}">
			<joint name="${name}_tilt_plate_joint" type="${body_config_tiltPlate['joint']['type']}">
				<xacro:property name="tmp" value="${body_config_tiltPlate['joint']['origin']}"/>
				<parent link="${name}_base_link_dummy"/>
				<child link="${name}_tilt_plate"/>
				<origin xyz="${tmp['position']['x']} ${tmp['position']['y']} ${tmp['position']['z']}"
				rpy="${tmp['orientation']['roll']} ${tmp['orientation']['pitch']} ${tmp['orientation']['yaw']}"/>
				<axis xyz="0 0 1"/>
				<!-- <dynamic damping="0.1"/> -->
			</joint>
		</xacro:if>


		<!-- Dummy joint link for the differential -->

		<!-- <xacro:if value="${has_differential}">
			<link name="${name}_dummy_disk">
				<inertial>
            		<origin xyz="0 0 0" rpy="0 0 0"/>
					<mass value="1e-1"/>
					<inertia ixx="1e-1" ixy="0" ixz="0" iyy="1e-1" iyz="0" izz="1e-1"/>
				</inertial>
				<visual>
					Use disk as simple geometry visualization
					<geometry>
						<cylinder radius="0.05" length="0.05"/>
						<box size="0.20 0.20 0.05"/>
					</geometry>
				</visual>
			</link>
		</xacro:if> -->


		<!-- Define here the joint of the dummy disk -->
		
		<!-- <xacro:if value="${has_differential}">
			<joint name="${name}_dummy_joint" type="revolute">
				<parent link="${name}_base_link_dummy"/>
				<child link="${name}_dummy_disk"/>
				<origin xyz="0 0 0" rpy="${-pi/2} 0 0"/>
				<axis xyz="0 0 1"/>
				<limit lower="0" upper="0" effort="1e6" velocity="1e6"/>
			</joint>
		</xacro:if> -->

		<!-- <xacro:if value="${has_differential}">
			<gazebo reference="{name}_dummy_joint">
				<disableFixedJointLumping>true</disableFixedJointLumping>
				<preserveFixedJoint>true</preserveFixedJoint>
			</gazebo>
		</xacro:if> -->


		<!-- Define here the color of the dummy disk -->

		<!-- <xacro:if value="${has_differential}">
			<gazebo reference="${name}_dummy_disk">
				<material>Gazebo/Blue</material>
			</gazebo>
		</xacro:if> -->


		<!-- DEFINE HERE THE IMU LINK -->
		<link name="${name}_imu_link"/>
		<joint name="${name}_imu_joint" type="fixed">
			<parent link="${name}_base_link_dummy"/>
			<child link="${name}_imu_link"/>
			<origin xyz="0 0 0.08" rpy="0 0 0"/>
		</joint>
		<!-- <gazebo reference="${name}_imu_joint">
			<disableFixedJointLumping>true</disableFixedJointLumping> 
			<preserveFixedJoint>true</preserveFixedJoint>
		</gazebo>  -->

		<!-- DEFINE HERE THE SCAN LINK -->
		<link name="${name}_scan_link"/>
		<joint name="${name}_scan_joint" type="fixed">
			<parent link="${name}_base_link_dummy"/>
			<child link="${name}_scan_link"/>
			<origin xyz="0 0 0.13" rpy="0 ${pi / 18} 0"/>
		</joint>


		<!-- DEFINE HERE THE RASPBERRY PI CAMERA LINK -->
		<link name="${name}_pi_camera_link"/>
		<joint name="${name}_pi_camera_joint" type="fixed">
			<parent link="${name}_base_link_dummy"/>
			<child link="${name}_pi_camera_link"/>
			<origin xyz="0.15 0 0.075" rpy="0 0 0"/>
		</joint>

		<link name="${name}_pi_camera_color_optical_frame"/>
		<joint name="${name}_pi_camera_color_optical_joint" type="fixed">
			<parent link="${name}_pi_camera_link"/>
			<child link="${name}_pi_camera_color_optical_frame"/>
			<origin xyz="0 0 0.005" rpy="0 0 0"/>
		</joint>



		<link name="${name}_realsense_d435i_link"/>
		<joint name="${name}_realsense_joint" type="fixed">
			<parent link="${name}_base_link_dummy"/>
			<child link="${name}_realsense_d435i_link"/>
			<origin xyz="0.15 0 0.2" rpy="0 0 0"/>
		</joint>





		<!-- Define here the world joint -->

		<joint name="${name}_world_joint" type="${body_config['joint']['type']}">
			<xacro:property name="tmp" value="${body_config['joint']['origin']}"/>
			<parent link="${name}_base_link"/>
			<child link="${name}_base_link_dummy"/>
			<origin xyz="${tmp['position']['x']} ${tmp['position']['y']} ${tmp['position']['z']}"
			rpy="${tmp['orientation']['roll']} ${tmp['orientation']['pitch']} ${tmp['orientation']['yaw']}"/>
			<axis xyz="0 0 1"/>
		</joint>

		<!-- <gazebo reference="${name}_world_joint">
			<preserveFixedJoint>false</preserveFixedJoint>
		</gazebo> -->


		<gazebo reference="${name}_base_link">
			<material>Gazebo/Black</material>
		</gazebo>

	</xacro:macro>
</robot>
