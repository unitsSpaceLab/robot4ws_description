<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="Archimede">
    <!-- 
        @author: Matteo Caruso
        @email: matteo.caruso@phd.units.it
        @email: matteo.caruso1993@gmail.com
    -->
	<xacro:arg name="include_kinematics_plugin" default="true"/>
    <xacro:arg name="realsense_point_could" default="false"/>
    <!-- <xacro:arg name="" -->
	<xacro:macro name="rover_plugins" params="name">

        <gazebo>
            <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
                <robotNamespace>/Archimede</robotNamespace>
                <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
                <legacyModeNS>true</legacyModeNS>
            </plugin>
        </gazebo>


        <!-- <gazebo>
            <plugin name="${name}_kinematic_plugin" filename="libarchimede_kinematics_gazebo_ros_simulation_plugin.so"/>
        </gazebo> -->
        <gazebo>
            <plugin name="${name}_odometry_plugin" filename="libarchimede_odometry_gazebo_plugin.so">
                <integrator>Trapezi</integrator>
                <odomTopicName>Archimede/odom</odomTopicName>
                <odomQueSize>100</odomQueSize>
                <odomFrameName>odom</odomFrameName>
                <odomPublishRate>10</odomPublishRate>
                <baseLinkFrameName>Archimede_foot_print</baseLinkFrameName>
                <useFakePublishers>true</useFakePublishers>
                <motorCurrentTopicName>Archimede/motor_current</motorCurrentTopicName>
                <motorTemperatureTopicName>Archimede/motor_temperature</motorTemperatureTopicName>
                <soundTopicName>Archimede/sound</soundTopicName>
                <JointStateTopicName>Archimede/JointStateFake</JointStateTopicName>
                <SensorStateTopicName>Archimede/sensor_state</SensorStateTopicName>
                <OdomMode>position</OdomMode>
                <skipFrames>1</skipFrames>
            </plugin>
        </gazebo>


        <!-- INCLUDE HERE PLUGIN FOR IMU -->
        <!-- <gazebo>
            <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
            <alwaysOn>true</alwaysOn>
            <bodyName>${name}_imu_link</bodyName>
            <frameName>${name}_imu_link</frameName>
            <topicName>${name}/imu</topicName>
            <serviceName>imu_service</serviceName>
            <gaussianNoise>0.0</gaussianNoise>
            <updateRate>100</updateRate>
            <imu>
                <noise>
                <type>gaussian</type>
                <rate>
                    <mean>0.0</mean>
                    <stddev>2e-4</stddev>
                    <bias_mean>0.0000075</bias_mean>
                    <bias_stddev>0.0000008</bias_stddev>
                </rate>
                <accel>
                    <mean>0.0</mean>
                    <stddev>1.7e-2</stddev>
                    <bias_mean>0.1</bias_mean>
                    <bias_stddev>0.001</bias_stddev>
                </accel>
                </noise>
            </imu>
            </plugin>
        </gazebo> -->


        <!-- Try with hector gazebo plugin hector_gazebo_ros_imu-->

         <gazebo>
            <plugin name="${name}_imu_sim" filename="libhector_gazebo_ros_imu.so">
                <updateRate>100</updateRate>
                <!-- <robotNamespace></robotNamespace> -->
                <bodyName>${name}_imu_link</bodyName>
                <frameId>${name}_imu_link</frameId>
                <topicName>Archimede/imu</topicName>
                <accelOffset>0 0 0</accelOffset>
                <accelDrift>0 0 0</accelDrift>
                <accelGaussianNoise>0 0 0</accelGaussianNoise>
                <rateOffset>0 0 0</rateOffset>
                <rateDrift>0 0 0</rateDrift>
                <rateGaussianNoise>0 0 0</rateGaussianNoise>
                <yawOffset>0</yawOffset>
                <yawDrift>0</yawDrift>
                <yawGaussianNoise>0</yawGaussianNoise>
            </plugin>
        </gazebo>


        <!-- <gazebo reference="${name}_imu_link">
            <gravity>true</gravity>
            <sensor name="imu_sensor" type="imu">
            <always_on>true</always_on>
            <update_rate>100</update_rate>
            <visualize>true</visualize>
            <topic>__default_topic__</topic>
            <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
                <topicName>${name}/imu</topicName>
                <bodyName>${name}_imu_link</bodyName>
                <updateRateHZ>10.0</updateRateHZ>
                <gaussianNoise>0.0</gaussianNoise>
                <xyzOffset>0 0 0</xyzOffset>
                <rpyOffset>0 0 0</rpyOffset>
                <frameName>${name}_imu_link</frameName>
                <initialOrientationAsReference>false</initialOrientationAsReference>
            </plugin>
            <pose>0 0 0 0 0 0</pose>
            </sensor>
        </gazebo>  -->

        <!-- <gazebo>
            <plugin name="${name}_get_body_pose" filename="libarchimede_get_link_state.so">
                <saveDir>$(find robot4ws_simulations)/data</saveDir>
                <linkName>${name}_base_link</linkName>
                <readCOG>false</readCOG>
                <worldMode>true</worldMode>
            </plugin>
        </gazebo>


        <gazebo>
            <plugin name="${name}_get_fr_steer_hub_pose" filename="libarchimede_get_link_state.so">
                <saveDir>$(find robot4ws_simulations)/data</saveDir>
                <linkName>${name}_fr_steer_link</linkName>
                <readCOG>false</readCOG>
                <worldMode>false</worldMode>
            </plugin>
        </gazebo> -->





        <gazebo>
            <plugin name="${name}_magetic_sensor" filename="libhector_gazebo_ros_magnetic.so">
                <updateRate>100</updateRate>
                <robotNamespace>Archimede</robotNamespace>
                <bodyName>${name}_imu_link</bodyName>
                <topicName>magnetic_field</topicName>
            </plugin>
        </gazebo>


    
	</xacro:macro>
</robot>